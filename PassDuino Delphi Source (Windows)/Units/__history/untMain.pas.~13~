//
//  PassDuino
//  Version 1.0 (August 2020)
//
//  Made by ERDesigns - Ernst Reidinga
//  as an open-source project
//
//  If you change code, add functions, fix bugs or anything else
//  please share them - so i can update the GIT and update the code
//  on the website so others can use it too :)
//
//  I used some open-source / public domain - code from Torry, and SourceForce.
//
//  If you like my work, and you like to support by donating please send a mail
//  and ill send my paypal address where you can send the donation.
//
//

unit untMain;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Menus,
  System.ImageList, Vcl.ImgList, Vcl.ComCtrls, Vcl.ToolWin;

type
  TPassDuinoListItem = class(TListItem)
  private
    FHotKey : TShortCut;
  public
    property HotKey: TShortCut read FHotKey write FHotKey;
  end;

  TfrmMain = class(TForm)
    StatusBar: TStatusBar;
    ToolBar1: TToolBar;
    lvPasswords: TListView;
    ToolButton1: TToolButton;
    ToolButton2: TToolButton;
    ToolButton3: TToolButton;
    ToolButton4: TToolButton;
    ToolButton5: TToolButton;
    ToolButton6: TToolButton;
    ToolButton7: TToolButton;
    ToolButton8: TToolButton;
    ToolButton9: TToolButton;
    ToolButton10: TToolButton;
    ToolButton11: TToolButton;
    procedure lvPasswordsCreateItemClass(Sender: TCustomListView;
      var ItemClass: TListItemClass);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmMain: TfrmMain;

implementation

{$R *.dfm}

uses untFunctions;

procedure TfrmMain.lvPasswordsCreateItemClass(Sender: TCustomListView;
  var ItemClass: TListItemClass);
begin
  ItemClass := TPassDuinoListItem;
end;

end.
